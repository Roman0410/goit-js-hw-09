{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CAAEC,QAAS,MAmCvB,SAASC,EAAaC,EAAGC,IAbzB,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAKXQ,CAAcX,EAAI,EAAGC,GAClBW,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBU,QAAQC,IAAI,uBAAqBZ,QAAiBC,OAClDT,EAAAE,OAAOmB,QAAQ,uBAAqBb,QAAiBC,MAAU,IAEhEa,OAAM,EAACd,SAAEA,EAAQC,MAAEA,MAClBU,QAAQC,IAAI,sBAAoBZ,QAAiBC,OACjDT,EAAAE,OAAOqB,QAAQ,sBAAoBf,QAAeC,MAAU,G,CAzCrDe,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAqBC,GACnBR,QAAQS,QACRD,EAAUE,iBACV,MAAMC,EAAkBC,OAAOJ,EAAUK,OAAOC,SAAS,GAAGC,OACtDC,EAAiBJ,OAAOJ,EAAUK,OAAOC,SAAS,GAAGC,OACrDE,EAAWL,OAAOJ,EAAUK,OAAOC,SAAS,GAAGC,OAErD,IAAI3B,EAAa,EACbD,EAAI,EACR,KAAOA,EAAI8B,GACT7B,EAAauB,EAAkBK,EAAiB7B,EAEhDD,EAAaC,EAAGC,GAChBD,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({ timeout: 3000 });\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', runPromices);\n\nfunction runPromices(submitObj) {\n  console.clear();\n  submitObj.preventDefault();\n  const firstDelayField = Number(submitObj.target.elements[0].value);\n  const delayStepField = Number(submitObj.target.elements[1].value);\n  const runTimes = Number(submitObj.target.elements[2].value);\n\n  let sumCounter = 0;\n  let i = 0;\n  while (i < runTimes) {\n    sumCounter = firstDelayField + delayStepField * i;\n\n    startPromice(i, sumCounter);\n    i++;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\nfunction startPromice(i, sumCounter) {\n  createPromise(i + 1, sumCounter)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","timeout","$47d4ff9957288465$var$startPromice","i","sumCounter","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","console","log","success","catch","failure","document","querySelector","addEventListener","submitObj","clear","preventDefault","firstDelayField","Number","target","elements","value","delayStepField","runTimes"],"version":3,"file":"03-promises.2e88e08d.js.map"}