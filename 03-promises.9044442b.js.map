{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAaC,EAAGC,GAbzB,IAAuBC,EAAUC,EACzBC,GADeF,EAcPF,EAAI,EAdaG,EAcVF,EAbfG,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAMFQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAC1DN,EAAAmB,OAAOC,QAAQ,uBAAwCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAE9De,OAAM,SAAAN,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,QAAQC,IAAI,sBAAuCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OACzDN,EAAAmB,OAAOG,QAAQ,sBAAqCJ,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IA3ChEN,EAAAmB,OAAOI,KAAK,CAAEC,QAAS,MAEVC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAqBC,GACnBZ,QAAQa,QACRD,EAAUE,iBACV,IAAMC,EAAkBC,OAAOJ,EAAUK,OAAOC,SAAS,GAAGC,OACtDC,EAAiBJ,OAAOJ,EAAUK,OAAOC,SAAS,GAAGC,OACrDE,EAAWL,OAAOJ,EAAUK,OAAOC,SAAS,GAAGC,OAGjDhC,EAAI,EACR,KAAOA,EAAIkC,GAGTnC,EAAaC,EAFA4B,EAAkBK,EAAiBjC,GAGhDA,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({ timeout: 3000 });\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', runPromices);\n\nfunction runPromices(submitObj) {\n  console.clear();\n  submitObj.preventDefault();\n  const firstDelayField = Number(submitObj.target.elements[0].value);\n  const delayStepField = Number(submitObj.target.elements[1].value);\n  const runTimes = Number(submitObj.target.elements[2].value);\n\n  let sumCounter = 0;\n  let i = 0;\n  while (i < runTimes) {\n    sumCounter = firstDelayField + delayStepField * i;\n\n    startPromice(i, sumCounter);\n    i++;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\nfunction startPromice(i, sumCounter) {\n  createPromise(i + 1, sumCounter)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$startPromice","i","sumCounter","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","console","log","concat","Notify","success","catch","failure","init","timeout","document","querySelector","addEventListener","submitObj","clear","preventDefault","firstDelayField","Number","target","elements","value","delayStepField","runTimes"],"version":3,"file":"03-promises.9044442b.js.map"}